on:
  #push:
  #release:
  #  types: [ created ]
name: Build
permissions:
  contents: write
jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "gradle"

      - name: Cache
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v3
        with:
          path: lilypad/build
          key: ${{ runner.os }}-${{ hashFiles('lilypadApp/build.gradle.kts', 'build.gradle.kts', 'gradle.properties', 'gradle/libs.versions.toml') }}



      - name: Setup Android SDK
        if: matrix.os == 'ubuntu-latest'
        uses: android-actions/setup-android@v3

      - name: Install rpm-tools on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install rpm

      - name: Build linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          ./gradlew build
          ./gradlew packageDistributionForCurrentOS
          ./gradlew assembleDebug
          ./gradlew assembleRelease
          ./gradlew --stop

      - name: Build MacOS
        if: matrix.os == 'macos-latest'
        run: |
          ./gradlew build
          ./gradlew packageDistributionForCurrentOS
          ./gradlew --stop

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          ./gradlew packageDistributionForCurrentOS
          ./gradlew --stop
          cd lilypadApp/build/compose/binaries/main/app
          Compress-Archive -Path app -Destination lilypad.zip

      - name: Upload DMG
        uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: lilypad.dmg
          path: lilypadApp/build/compose/binaries/main/dmg/*.dmg

      - name: Upload DEB
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: lilypad.deb
          path: lilypadApp/build/compose/binaries/main/deb/*.deb

      - name: Upload RPM
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: lilypad.rpm
          path: lilypadApp/build/compose/binaries/main/rpm/*.rpm

      - name: Upload ZIP
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: lilypad.zip
          path: lilypadApp/build/compose/binaries/main/lilypad.zip

      - name: Upload EXE
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: lilypad.exe
          path: lilypadApp/build/compose/binaries/main/exe/*.exe

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest' && github.event_name == 'release'
        with:
          name: lilypad.apk
          path: lilypadApp/build/outputs/apk/release/lilypadApp-release-unsigned.apk

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest' && github.event_name != 'release'
        with:
          name: lilypad.apk
          path: lilypadApp/build/outputs/apk/debug/lilypadApp-debug.apk

      - name: Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: |
            lilypad/build/compose/binaries/main/deb/*.deb
            lilypad/build/compose/binaries/main/genesis.zip
            appAndroid/build/outputs/apk/release/appAndroid-release-unsigned.apk
            appIos/build/genesis.ipa
      - name: Clean up windows
        if: matrix.os == 'windows-latest'
        run: |
          Remove-Item -Path appDesktop/build/compose/binaries -Recurse -Force

      - name: Clean up linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          rm -rf appDesktop/build/compose/binaries
          rm -rf appAndroid/build/outputs